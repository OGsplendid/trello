{"version":3,"file":"main.js","mappings":"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","sources":["webpack://trello/./src/components/memory/Memory.js","webpack://trello/./src/components/note-controller/NoteController.js","webpack://trello/./src/js/app.js"],"sourcesContent":["export default class Memory {\n  constructor() {\n    // this.saveDataInLocalStorage = this.save.bind(this);\n    // this.getDataFromLocalStorage = this.get.bind(this);\n\n    window.addEventListener('beforeunload', Memory.save);\n    document.addEventListener('DOMContentLoaded', Memory.get);\n  }\n\n  static save() {\n    localStorage.clear();\n    const itemsLeft = document.querySelector('.column-left').querySelectorAll('.note-text');\n    const itemsCenter = document.querySelector('.column-center').querySelectorAll('.note-text');\n    const itemsRight = document.querySelector('.column-right').querySelectorAll('.note-text');\n    if (itemsLeft) {\n      const arr = [];\n      for (const item of itemsLeft) {\n        arr.push(item.textContent);\n        localStorage.setItem('data-left', JSON.stringify(arr));\n        console.log(arr);\n      }\n    }\n    if (itemsCenter) {\n      const arr = [];\n      for (const item of itemsCenter) {\n        arr.push(item.textContent);\n        localStorage.setItem('data-center', JSON.stringify(arr));\n      }\n    }\n    if (itemsRight) {\n      const arr = [];\n      for (const item of itemsRight) {\n        arr.push(item.textContent);\n        localStorage.setItem('data-right', JSON.stringify(arr));\n      }\n    }\n  }\n\n  static get() {\n    let json;\n    let obj = null;\n    const note = (text) => {\n      const html = `\n      <div class=\"note-container\">\n        <div class=\"note\">\n          <span class=\"note-text\">${text}</span>\n          <span class=\"close-note hidden\">x</span>\n        </div>\n      </div>\n    `;\n    };\n\n    try {\n      json = localStorage.getItem('data-left');\n      obj = JSON.parse(json);\n    } catch (error) {\n      console.log(error);\n    }\n    if (obj) {\n      for (const item of obj) {\n        const html = Memory.makeNote(item);\n        document.querySelector('.column-left').querySelector('.column-main').insertAdjacentHTML('beforeend', html);\n      }\n    }\n    try {\n      json = localStorage.getItem('data-center');\n      obj = JSON.parse(json);\n    } catch (error) {\n      console.log(error);\n    }\n    if (obj) {\n      for (const item of obj) {\n        const html = Memory.makeNote(item);\n        document.querySelector('.column-center').querySelector('.column-main').insertAdjacentHTML('beforeend', html);\n      }\n    }\n    try {\n      json = localStorage.getItem('data-right');\n      obj = JSON.parse(json);\n    } catch (error) {\n      console.log(error);\n    }\n    if (obj) {\n      for (const item of obj) {\n        const html = Memory.makeNote(item);\n        document.querySelector('.column-right').querySelector('.column-main').insertAdjacentHTML('beforeend', html);\n      }\n    }\n  }\n\n  static makeNote(text) {\n    const note = `\n      <div class=\"note-container\">\n        <div class=\"note\">\n          <span class=\"note-text\">${text}</span>\n          <span class=\"close-note hidden\">x</span>\n        </div>\n      </div>\n    `;\n    return note;\n  }\n}\n","import Memory from '../memory/Memory';\n\nexport default class NoteController {\n  constructor(wrapper) {\n    this.wrapper = wrapper;\n    this.memory = new Memory();\n    this.actualElement = undefined;\n    this.shiftX = undefined;\n    this.shiftY = undefined;\n\n    this.showForm = this.showForm.bind(this);\n    this.hideForm = this.hideForm.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.secondOnMouseOver = this.secondOnMouseOver.bind(this);\n\n    this.wrapper.addEventListener('mouseover', NoteController.onMouseOver);\n    this.wrapper.addEventListener('mouseout', NoteController.onMouseOut);\n    this.wrapper.addEventListener('click', NoteController.removeNote);\n    this.wrapper.addEventListener('click', this.showForm);\n    this.wrapper.addEventListener('click', this.hideForm);\n    this.wrapper.addEventListener('mousedown', this.onMouseDown);\n    this.wrapper.addEventListener('submit', NoteController.onSubmit);\n  }\n\n  static get form() {\n    return `\n      <form class=\"add-note\">\n        <textarea class=\"textarea\" placeholder=\"Enter a title for this card...\" cols=\"34\" rows=\"3\" required></textarea>\n        <div class=\"add-note-footer\">\n          <button class=\"add-note-button\" type=\"submit\">Add Card</button>\n          <span class=\"add-note-close\">&#10006;</span>\n        </div>\n      </form>\n    `;\n  }\n\n  static makeNote(text) {\n    const note = `\n      <div class=\"note-container\">\n        <div class=\"note\">\n          <span class=\"note-text\">${text}</span>\n          <span class=\"close-note hidden\">x</span>\n        </div>\n      </div>\n    `;\n    return note;\n  }\n\n  static removeNote(e) {\n    if (!e.target.classList.contains('close-note')) {\n      return;\n    }\n    const deletable = e.target.closest('.note');\n    deletable.remove();\n  }\n\n  static onMouseOver(e) {\n    if (!e.target.classList.contains('note')) {\n      return;\n    }\n    const closeNote = e.target.closest('.note').querySelector('.close-note');\n    closeNote.classList.toggle('hidden');\n  }\n\n  static onMouseOut(e) {\n    if (!e.target.classList.contains('note')) {\n      return;\n    }\n    const closeNote = e.target.closest('.note').querySelector('.close-note');\n    closeNote.classList.toggle('hidden');\n  }\n\n  showForm(e) {\n    if (!e.target.classList.contains('column-footer')) {\n      return;\n    }\n    const formHTML = NoteController.form;\n    e.target.insertAdjacentHTML('afterend', formHTML);\n    const form = e.target.closest('.column').querySelector('.add-note');\n    form.addEventListener('submit', this.onSubmit);\n    e.target.classList.toggle('hidden');\n  }\n\n  hideForm(e) {\n    if (!e.target.classList.contains('add-note-close')) {\n      return;\n    }\n    const form = e.target.closest('.add-note');\n    e.target.closest('.column').querySelector('.column-footer').classList.toggle('hidden');\n    form.removeEventListener('submit', this.onSubmit);\n    form.remove();\n  }\n\n  static onSubmit(e) {\n    e.preventDefault();\n\n    const text = e.target.closest('.column').querySelector('.textarea').value;\n    const cleanText = text.trim();\n    if (cleanText) {\n      const html = NoteController.makeNote(cleanText);\n      const aim = e.target.closest('.column').querySelector('.column-main');\n      const footer = e.target.closest('.column').querySelector('.column-footer');\n      aim.insertAdjacentHTML('beforeend', html);\n      e.target.remove();\n      footer.classList.toggle('hidden');\n    }\n    Memory.save();\n  }\n\n  onMouseUp(e) {\n    const mouseUpTarget = e.target;\n    console.log(mouseUpTarget);\n\n    this.actualElement.classList.remove('dragged');\n    this.actualElement = undefined;\n    this.shiftY = undefined;\n    this.shiftX = undefined;\n    this.actualElement.classList.remove('dragged');\n\n    document.documentElement.removeEventListener('mouseup', this.onMouseUp);\n    document.documentElement.removeEventListener('mouseover', this.secondOnMouseOver);\n  }\n\n  secondOnMouseOver(e) {\n    if (!this.actualElement) {\n      return;\n    }\n    this.actualElement.style.top = `${e.pageY - this.shiftY}px`;\n    this.actualElement.style.left = `${e.pageX - this.shiftX}px`;\n  }\n\n  onMouseDown(e) {\n    if (!e.target.classList.contains('note')) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.actualElement = e.target.closest('.note-container');\n    this.actualElement.classList.add('dragged');\n\n    this.shiftX = e.clientX - this.actualElement.getBoundingClientRect().left;\n    this.shiftY = e.clientY - this.actualElement.getBoundingClientRect().top;\n\n    document.documentElement.addEventListener('mouseup', this.onMouseUp);\n    document.documentElement.addEventListener('mouseover', this.secondOnMouseOver);\n  }\n}\n","import '../css/style.css';\nimport NoteController from '../components/note-controller/NoteController';\n\nconst noteController = new NoteController(document.querySelector('.wrapper'));\n"],"names":["Memory","constructor","window","addEventListener","save","document","get","localStorage","clear","itemsLeft","querySelector","querySelectorAll","itemsCenter","itemsRight","arr","item","push","textContent","setItem","JSON","stringify","console","log","json","obj","getItem","parse","error","html","makeNote","insertAdjacentHTML","text","NoteController","wrapper","this","memory","actualElement","undefined","shiftX","shiftY","showForm","bind","hideForm","onMouseDown","onMouseUp","secondOnMouseOver","onMouseOver","onMouseOut","removeNote","onSubmit","form","e","target","classList","contains","closest","remove","toggle","formHTML","removeEventListener","preventDefault","cleanText","value","trim","aim","footer","mouseUpTarget","documentElement","style","top","pageY","left","pageX","add","clientX","getBoundingClientRect","clientY"],"sourceRoot":""}